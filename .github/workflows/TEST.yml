name: Deploy to EC2 from Repository 1

on:
  push:
    branches:
      - main  # This can be adjusted based on your need

env:
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USERNAME: ${{ secrets.USERNAME }}
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
  AWS_REGION: 'us-east-1'
  ECR_REPOSITORY: 'yashvi/php'
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  IMAGE_TAG: latest
  REPO_URL: 'https://github.com/Yashvi-01/PHP.git'
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs: 
    deploy:
       runs-on: ubuntu-latest

       steps:
       - name: Checkout the deployment repository (Repository 2)
         uses: actions/checkout@v2

       - name: Checkout Repository 1
         run: |
          git clone $REPO_URL app-code
          cd app-code

       - name: Set up AWS CLI
         uses: aws-actions/configure-aws-credentials@v1
         with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

       - name: Login to ECR
         run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

       - name: Build Docker image from Repository 1
         run: |
          cd app-code
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
      
       - name: Push Docker image to ECR
         run: |
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

       - name: Set up SSH client
         run: |
          sudo apt-get install -y openssh-client
          mkdir -p ~/.test
          echo "$EC2_SSH_KEY" > ~/.test/key.pem
          chmod 400 ~/.test/key.pem
          ssh-keyscan -H "$EC2_HOST" >> ~/.test/known_hosts

       - name: SSH into EC2 and run Docker container
         run: |
          ssh -i ~/.test/key.pem -o StrictHostKeyChecking=no "$EC2_USERNAME"@"$EC2_HOST" <<'EOF'
            docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
            docker run -dit --name my-php-container -p 8080:80 $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
            sudo docker ps
          EOF

       - name: Verify Docker container is running on EC2
         run: |
          ssh -i ~/.test/key.pem -o StrictHostKeyChecking=no "$USERNAME"@"$EC2_HOST" "sudo docker ps"
